#!/usr/bin/env php
<?php

require __DIR__ . '/../../../autoload.php';

use clearice\argparser\ArgumentParser;
use ntentan\honam\Templates;
use ntentan\panie\Container;

$parser = new ArgumentParser();

$parser->addCommand(['name' => 'serve', 'help' => 'Start the internal php server']);
$parser->addCommand(['name' => 'build', 'help' => 'Run builds scripts to build assets and resources']);
$parser->addCommand(['name' => 'init', 'help' => 'Initialize the application']);

$parser->addOption([
    'short_name' => 'p', 'name' => 'port',
    'help' => 'Server port value (defaults to 8080)',
    'default' => '8080',
    'command' => 'serve',
    'type' => 'string'
]);
$parser->addOption([
    'short_name' => 'h', 'name' => 'host',
    'help' => 'Host to be bound to (defaults to 127.0.0.1)',
    'default' => '127.0.0.1',
    'command' => 'serve',
    'type' => 'string'
]);

// Options for build command
$parser->addOption([
    'short_name' => 'o', 'name' => 'public-path',
    'help' => 'Location of public directory',
    'default' => 'public',
    'command' => ['build', 'serve'],
    'type' => 'string'
]);

$parser->addOption([
    'short_name' => 'P', 'name' => 'pipeline-path',
    'help' => 'Location of the asset pipeline file',
    'default' => 'src/php/assets.php',
    'command' => ['build', 'serve'],
    'type' => 'string'
]);

$parser->addOption([
    'short_name' => 'a', 'name' => 'assets-path',
    'help' => 'Default location of input asset files',
    'default' => 'assets',
    'command' => ['build', 'serve'],
    'type' => 'string'
]);

$parser->addOption([
    'short_name' => 'f', 'name' => 'force',
    'help' => 'Rebuild all assets even if unmodified',
    'default' => false,
    'command' => 'build',
]);

// Options for init command
$parser->addOption([
    'short_name' => 'n', 'name' => 'name',
    'help' => 'Provide the name of the application',
    'command' => 'init'
]);

$parser->addOption([
    'short_name' => 's', 'name' => 'namespace',
    'help' => 'Provide the namespace of the application\'s classes',
    'command' => 'init'
]);

$parser->addOption([
    'name' => 'no-prompts',
    'help' => 'Disable all interactive prompts',
    'command' => 'init'
]);

$parser->enableHelp('Ntentan PHP Framework Dev Tool');
$options = $parser->parse();

if(!isset($options['__command'])) {
    echo $parser->getHelpMessage();
    exit(1);
}

$container = new Container();
$container->setup([
    Templates::class => [
        function() {
            return new Templates();
        }
    ]
]);
$class = "\\ntentan\\dev\\commands\\" . ucfirst($options['__command']);

exit($container->get($class)->run($options));
